#########server配置开始#################
server.port=8080
staticFiles.useExternal=false
staticFiles.location=/view
staticFiles.expireTime=60
session.expireTime=1800

########redis配置开始###################

###redis的ip地址
redis.host=127.0.0.1

###redis端口
redis.port=6379

###访问密码
redis.auth=iea20

###可用连接实例的最大数目，默认值为8；
###如果赋值为-1，则表示不限制；如果pool已经分配了maxActive个jedis实例，则此时pool的状态为exhausted(耗尽)。
redis.max_active=50

###控制一个pool最多有多少个状态为idle(空闲的)的jedis实例，默认值也是8。
redis.max_idle=20

###等待可用连接的最大时间，单位毫秒，默认值为-1，表示永不超时。如果超过等待时间，则直接抛出JedisConnectionException；
redis.max_wait=1000

###超时时间 单位毫秒
redis.timeout=10000

###在borrow一个jedis实例时，是否提前进行validate操作；如果为true，则得到的jedis实例均是可用的；
redis.test_on_borrow=true

########job管理配置#####################
###job管理的执行时间，每隔5s执行一次
jobmanager.trigger =cron:0/3 * * * * ?

########quartz配置#####################
org.quartz.threadPool.class = org.quartz.simpl.SimpleThreadPool
org.quartz.threadPool.threadCount = 20
org.quartz.threadPool.threadPriority = 5
org.quartz.threadPool.threadsInheritContextClassLoaderOfInitializingThread = true

# Using RAMJobStore
#将schedule相关信息保存在RAM中，轻量级，速度快，遗憾的是应用重启时相关信息都将丢失。
org.quartz.jobStore.class = org.quartz.simpl.RAMJobStore
#misfireThreshold ： 最大能忍受的触发超时时间，如果超过则认为“失误”, 3600秒
org.quartz.jobStore.misfireThreshold = 3600000